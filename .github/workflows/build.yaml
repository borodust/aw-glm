name: Build
on:
  push:
    tags:
      - "v*.*.**"
jobs:
  build-linux:
    runs-on: ubuntu-20.04
    steps:
      - name: Check Out Everything
        id: checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup Build Variables
        id: vars
        run: >-
          export RELEASE_VERSION=${GITHUB_REF#refs/*/} &&
          echo ::set-output name=runtime_binary::libglm.clawed-linux-x86_64-$RELEASE_VERSION.so
      - run: echo "LLVM_INSTALL_PREFIX=${{ github.workspace }}/llvm" >> $GITHUB_ENV
      - name: Cache LLVM and Clang
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.LLVM_INSTALL_PREFIX }}
          key: llvm-9.0
      - name: Install LLVM And Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "9.0"
          directory: ${{ env.LLVM_INSTALL_PREFIX }}
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}
      - name: Install Required Packages
        run: sudo apt-get update && sudo apt-get install -y ninja-build patchelf
      - name: Build Binaries
        run: |
          cd ${{ github.workspace }}/src/lib/ && ./build.sh desktop
      - run: cp -L "${{ env.LLVM_INSTALL_PREFIX }}/lib/libc++.so.1" "${{ env.LLVM_INSTALL_PREFIX }}/lib/libc++abi.so.1" "${{ github.workspace }}/src/lib/build/desktop/"
      - name: Set libc++ RPATH
        run: patchelf --set-rpath '${ORIGIN}' src/lib/build/desktop/libc++.so.1 src/lib/build/desktop/libc++abi.so.1
      - name: Rename Binaries
        run: >-
          mv src/lib/build/desktop/libglm.clawed.so ${{ steps.vars.outputs.runtime_binary }}
      - name: Publish Binaries
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            ${{ steps.vars.outputs.runtime_binary }}
            src/lib/build/desktop/libc++.so.1
            src/lib/build/desktop/libc++abi.so.1
  build-windows:
    runs-on: windows-2019
    steps:
      - name: Check Out Everything
        id: checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup Build Variables
        id: vars
        run: >-
          export RELEASE_VERSION=${GITHUB_REF#refs/*/} &&
          echo ::set-output name=runtime_binary::glm.clawed-windows-x64-$RELEASE_VERSION.dll
        shell: bash
      - name: Build Binaries
        run: |
          cd ${{ github.workspace }}/src/lib/
          ./build.ps1
      - name: Rename Binaries
        run: >-
          mv src/lib/build/desktop/glm.clawed.dll ${{ steps.vars.outputs.runtime_binary }}
      - name: Publish Binaries
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            ${{ steps.vars.outputs.runtime_binary }}
  build-android:
    runs-on: ubuntu-20.04
    steps:
      - name: Check Out Everything
        id: checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup Build Variables
        id: vars
        run: >-
          export RELEASE_VERSION=${GITHUB_REF#refs/*/} &&
          echo ::set-output name=ndk_version::22.1.7171670 &&
          echo ::set-output name=runtime_binary::libglm.clawed-android-aarch64-$RELEASE_VERSION.so
      - name: Cache NDK
        id: cache-ndk
        uses: actions/cache@v2
        with:
          path: |
            $ANDROID_HOME/ndk/${{ steps.vars.outputs.ndk_version }}/
          key: ndk-${{ steps.vars.outputs.runtime_binary }}
      - name: Install Required NDK version
        run: sudo ${ANDROID_HOME}/tools/bin/sdkmanager --install "ndk;${{ steps.vars.outputs.ndk_version }}"
      - name: Build Binaries
        run: >-
          cd ${{ github.workspace }}/src/lib/ &&
          ./build.sh --arch aarch64 --ndk $ANDROID_HOME/ndk/${{ steps.vars.outputs.ndk_version }}
          android
      - name: Rename Binaries
        run: >-
          mv src/lib/build/android/libglm.clawed.so ${{ steps.vars.outputs.runtime_binary }}
      - name: Publish Binaries
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            ${{ steps.vars.outputs.runtime_binary }}
